var gdjs;(function(r){r.PixiFiltersTools.registerFilterCreator("Scene3D::BrightnessAndContrast",new class{makeFilter(t,a){return typeof THREE=="undefined"?new r.PixiFiltersTools.EmptyFilter:new class{constructor(){this.shaderPass=new THREE_ADDONS.ShaderPass(THREE_ADDONS.BrightnessContrastShader),this._isEnabled=!1}isEnabled(e){return this._isEnabled}setEnabled(e,s){return this._isEnabled===s?!0:s?this.applyEffect(e):this.removeEffect(e)}applyEffect(e){return e instanceof r.Layer?(e.getRenderer().addPostProcessingPass(this.shaderPass),this._isEnabled=!0,!0):!1}removeEffect(e){return e instanceof r.Layer?(e.getRenderer().removePostProcessingPass(this.shaderPass),this._isEnabled=!1,!0):!1}updatePreRender(e){}updateDoubleParameter(e,s){e==="brightness"&&(this.shaderPass.uniforms[e].value=s),e==="contrast"&&(this.shaderPass.uniforms[e].value=s)}getDoubleParameter(e){return e==="brightness"?this.shaderPass.uniforms[e].value:e==="contrast"?this.shaderPass.uniforms[e].value:0}updateStringParameter(e,s){}updateColorParameter(e,s){}getColorParameter(e){return 0}updateBooleanParameter(e,s){}getNetworkSyncData(){return{b:this.shaderPass.uniforms.brightness.value,c:this.shaderPass.uniforms.contrast.value}}updateFromNetworkSyncData(e){this.shaderPass.uniforms.brightness.value=e.b,this.shaderPass.uniforms.contrast.value=e.c}}}})})(gdjs||(gdjs={}));
//# sourceMappingURL=BrightnessAndContrastEffect.js.map
